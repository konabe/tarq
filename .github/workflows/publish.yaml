name: Publish to crates.io & npm

on:
  push:
    # TODO: PRがClosedされたときにpublishするようにする
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build cargo project
        run: cargo build --release --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Login to crates.io
        run: cargo login ${{ secrets.CARGO_TOKEN }}
      - name: Check if version already exists on crates.io
        id: check_version_tarq_core
        run: |
          CRATE_NAME="tarq_core"
          CRATE_VERSION=$(cargo metadata --manifest-path tarq_core/Cargo.toml --no-deps --format-version 1 | jq -r '.packages[0].version')
          if curl --silent "https://crates.io/api/v1/crates/${CRATE_NAME}" | jq -e ".versions[] | select(.num == \"${CRATE_VERSION}\")" > /dev/null; then
            echo "Version ${CRATE_VERSION} already exists."
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Publish tarq_core
        if: steps.check_version_tarq_core.outputs.exists == 'false'
        run: cargo publish --verbose --manifest-path tarq_core/Cargo.toml
      - name: Check if version already exists on crates.io
        id: check_version_tarq
        run: |
          CRATE_NAME="tarq_core"
          CRATE_VERSION=$(cargo metadata --manifest-path tarq_core/Cargo.toml --no-deps --format-version 1 | jq -r '.packages[0].version')
          if curl --silent "https://crates.io/api/v1/crates/${CRATE_NAME}" | jq -e ".versions[] | select(.num == \"${CRATE_VERSION}\")" > /dev/null; then
            echo "Version ${CRATE_VERSION} already exists."
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Publish tarq
        if: steps.check_version_tarq.outputs.exists == 'false'
        run: cargo publish --verbose --manifest-path tarq/Cargo.toml
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - name: Build npm project
        run: wasm-pack build tarq_core --release --target nodejs
      - name: Publish to npm
        run: |
          if npx can-npm-publish --verbose tarq_core/pkg; then
              wasm-pack publish
          else
              echo "publish skipped"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
